{"version":3,"file":"vueMini.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap db02f0ada73d3aa73bb5","webpack:///src/share/judge/util.js","webpack:///src/share/utiliy/error.js","webpack:///src/Vnode/dom-operation.js","webpack:///src/Vnode/index.js","webpack:///src/Vnode/patch/create.js","webpack:///src/Vnode/patch/process.js","webpack:///src/compiler/parse/text-parse.js","webpack:///src/observer/dep.js","webpack:///src/observer/proxy.js","webpack:///src/share/utiliy/index.js","webpack:///src/share/utiliy/tool.js","webpack:///src/instance/index.js","webpack:///src/Vnode/patch.js","webpack:///src/Vnode/patch/update.js","webpack:///src/compiler/generate.js","webpack:///src/compiler/index.js","webpack:///src/compiler/parse/attr-parse.js","webpack:///src/compiler/parse/html-parse.js","webpack:///src/compiler/parse/index.js","webpack:///src/instance/data.js","webpack:///src/instance/method.js","webpack:///src/instance/render.js","webpack:///src/observer/index.js","webpack:///src/observer/watcher.js","webpack:///src/share/judge/element.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db02f0ada73d3aa73bb5","export var isObject = function(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\n\n\nexport var isEmpty = function(obj) {\n    if (!obj) {\n        return true;\n    }\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n}\n\n\nexport var isElement = function(value) {\n    return (\n        typeof HTMLElement === 'object' ? value instanceof HTMLElement : //DOM2\n        value && typeof value === \"object\" && value !== null && value.nodeType === 1 && typeof value.nodeName === \"string\"\n    );\n}\n\n\nexport function isUndefined(value) {\n    return value === undefined;\n}\n\n\n// WEBPACK FOOTER //\n// src/share/judge/util.js","// import VConsole from 'vconsole';\n// var vConsole = new VConsole();\n\n\n\n\n\n//抛出错误警告\nexport var warnError = function(error, fn) {\n    console.error(error)\n    if (fn) {\n        fn();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// src/share/utiliy/error.js","\n\n//查询节点\nexport var queryNode = function(el){\n\tvar elm = document.querySelector(el);\n\treturn elm;\n}\n\n\n//创建元素节点\nexport var createElement = function(el){\n\treturn document.createElement(el);\n}\n\n//创建文本节点\nexport var createTextNode = function(text){\n\treturn document.createTextNode(text);\n}\n\n\n//替换节点\nexport var repalceNode = function(el,newNode,oldNode){\n\tel.replaceChild(newNode,oldNode)\n}\n\n//设置节点文本内容\nexport var setText = function(el,text){\n\treturn el.textContent = text;\n}\n\n\n//设置节点属性\nexport var setAttribute = function(el,attrKey,attrValue){\n\tel.setAttribute(attrKey,attrValue)\n}\n\n\n//设置节点值\nexport var setElementValue = function(el,valueKey,value){\n\tif(!el[valueKey]){\n\t\treturn false;\n\t}\n\tel[valueKey] = value;\n\treturn true;\n}\n\n//复制节点\nexport var cloneElement = function(el,flag){\n\treturn el.cloneElement(flag?true:false);\n}\n\n\n//删除属性\nexport var removeAttribute = function(el,attrKey){\n\tel.removeAttribute(attrKey);\n}\n\n\n//删除子节点\nexport var removeChild = function(el,child){\n\tel.removeChild(child);\n}\n\n\n//获取父节点\nexport var getParent = function(el){\n\treturn el.parentNode? el.parentNode : false;\n}\n\n\n//加入子节点\nexport var appendChild = function(el,child){\n\tel.appendChild(child);\n}\n\n\n\n//插入新节点\nexport var insertBefore = function(el,newChild,child){\n\tel.insertBefore(newChild,child);\n}\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/Vnode/dom-operation.js","import {\n    isObject\n} from '../share/judge/util';\nimport {\n    warnError\n} from '../share/utiliy/error';\n\n\n//虚拟节点\nconst Vnode = function(option) {\n    this.VnodeType = null;\n    this.tagName = null;\n    this.elm = null;\n    this.attrs = null;\n    this.children = null;\n    this.events = null;\n    this.directives = null;\n    this.parent = null;\n    this.text = null;\n    this.empty = null;\n\n    return this;\n}\n\n\n\n//构建虚拟节点\nexport var createVNodeElement = function(tag, attrs, children, events, directives, isRoot) {\n    var el = new Vnode()\n    el.VnodeType = 1;\n    el.tagName = tag;\n    el.attrs = attrs;\n    el.children = children;\n    el.events = events;\n    el.directives = directives;\n    // el.beforeNode = null;\n    // el.nextNode = null\n\n    //根组件这里做下特殊处理 给子组件遍历一次 绑定父组件关系\n    //这里可能存在性能损耗\n    if (isRoot) {\n        //这里有问题 需要改\n        el.parent = isRoot;\n        el.isRoot = true;\n        if (Array.isArray(el.children) && el.children.length > 0) {\n            childrenBindParent(el.children, el)\n        }\n    }\n\n    //为子节点绑定父节点关系\n    function childrenBindParent(children, parent) {\n        if (!Array.isArray(children) || children.length === 0) {\n            return false;\n        }\n        for (var i = 0; i < children.length; i++) {\n            var node = children[i]\n                //vm-for 接收的数据特殊处理 这里还不优雅 需要进一步处理\n            if (Array.isArray(node)) {\n                node.map(function(item, index) {\n                    index = i + 1 + index;\n                    item.parent = parent\n                    children.splice(index, 0, item);\n                })\n                children.splice(i, 1);\n                continue;\n            }\n            //建立父节点关系\n            node.parent = parent\n            if (Array.isArray(node.children) && node.children.length > 0) {\n                childrenBindParent(node.children, node)\n            }\n        }\n    }\n    return el;\n}\n\n\n\n//构建虚拟文本节点\nexport var createVNodeText = function(text) {\n    var el = new Vnode()\n    el.VnodeType = 2;\n    el.text = text;\n    return el;\n}\n\n\n//构建空的虚拟节点\nexport var createEmptyVnode = function() {\n    var el = new Vnode();\n    el.VnodeType = 1;\n    el.empty = true\n    return el;\n}\n\n\n//创建列表虚拟节点\nexport var createListVNode = function(source, generatefn) {\n    if (!Array.isArray(source) && !isObject(source)) {\n        warnError('vm-for error: ' + source + ' is not array or object ')\n    }\n    var VNode = []\n    if (Array.isArray(source)) {\n        VNode = source.map(function(item, index) {\n            return generatefn(item, index);\n        })\n    } else {\n        for (var key in source) {\n            VNode.push(generatefn(source[key]))\n        }\n    }\n    return VNode\n}\n\n\n\n\n\n\nexport default Vnode;\n\n\n// WEBPACK FOOTER //\n// src/Vnode/index.js","\n\nimport * as nodeOp from '../dom-operation';\nimport { isEmpty } from '../../share/judge/util';\n\nimport { \n\tsetAttribute,\n\tsetEventListener,\n\tprocessDirective,\n\tprocessModelDirective,\n\tprocessClassDirective,\n\tprocessShowDirective } from './process';\n\n//创建组件\nvar cerateElement = function(Vnode){\n\tvar tagName, children;\n\n\tif(Vnode.VnodeType === 1 && !Vnode.empty){\n\t\ttagName = Vnode.tagName;\n\t\tchildren = Vnode.children;\n\n\t\tVnode.elm = nodeOp.createElement(tagName);\n\t\t//处理指令\n\t\tprocessDirective(Vnode, Vnode.directives);\n\t\t//设置属性\n\t\tsetAttribute(Vnode.elm, Vnode.attrs);\n\t\t//设置事件\n\t\tsetEventListener(Vnode.elm, Vnode.events);\n\n\t\t//递归更新生成子元素\n\t\tif(Array.isArray(children) && children.length > 0){\n\t\t\tfor(var i = 0; i<children.length; i++){\n\t\t\t\tcerateElementBindAddParent(children[i],Vnode.elm);\n\t\t\t}\t\n\t\t}\n\t}else if(Vnode.VnodeType === 2 && !Vnode.empty){\n\t\tVnode.elm = nodeOp.createTextNode(Vnode.text);\n\t}\n\treturn Vnode;\n}\n\n//创建组件并且添加到父节点中\nvar cerateElementBindAddParent = function(Vnode,parentElm){\n\tvar Vnode = cerateElement(Vnode);\n\tnodeOp.appendChild(parentElm,Vnode.elm);\n}\n\n\n\nexport {\n\tcerateElement,\n\tcerateElementBindAddParent,\n}\n\n\n// WEBPACK FOOTER //\n// src/Vnode/patch/create.js","import * as nodeOp from '../dom-operation';\nimport {\n    isEmpty\n} from '../../share/judge/util';\n\n// style=\"xxxx=xxx(;)\"判断正则\nvar styleSeparatorReg = /(;)+\\s*$/;\n\n\n//设置属性\nvar setAttribute = function(refElm, attrs) {\n    for (var key in attrs) {\n        //checked 特殊处理\n        if (key === 'checked') {\n            //因为这里是转换成了字符串\n            if (JSON.parse(attrs[key])) {\n                nodeOp.setAttribute(refElm, key, 'checked')\n            }\n            continue;\n        }\n        nodeOp.setAttribute(refElm, key, attrs[key])\n    }\n}\n\n//绑定事件\nvar setEventListener = function(refElm, events) {\n    if (!Array.isArray(events) || events.length === 0) {\n        return false;\n    }\n    for (var i = 0; i < events.length; i++) {\n        (function(count) {\n            //这个标志用来解决闭包呢concat el问题\n            var flag = true;\n            events[count].instance = function(el) {\n                if (!events[count].params) {\n                    events[count].params = [];\n                }\n                //组装参数\n                if (flag) {\n                    events[count].params = events[count].params.concat([el])\n                    flag = false;\n                }\n                //执行\n                events[count].exp.apply(this, events[count].params)\n            }\n        })(i)\n        refElm.addEventListener(events[i].name, events[i].instance);\n    }\n}\n\n\n\n//设置相应指令\n//对应的删除还没做\nvar processDirective = function(Vnode, directives) {\n    if (!Array.isArray(directives) || directives.length === 0) {\n        return false;\n    }\n    for (var i = 0; i < directives.length; i++) {\n        var directive = directives[i];\n\n        //model特殊处理\n        if (directive.name === 'model' && !directive.event) {\n            processModelDirective(Vnode, directive)\n            continue;\n        }\n        //class特殊处理\n        if (directive.name === 'class' && !isEmpty(directive.exp)) {\n            processClassDirective(Vnode, directive)\n            continue;\n        }\n        //show特殊处理\n        if (directive.name === 'show') {\n            processShowDirective(Vnode, directive)\n            continue;\n        }\n    }\n}\n\n\n//处理model指令\nvar processModelDirective = function(Vnode, directive) {\n    directive.event = function(el) {\n        directive.exp(el.target.value);\n    }\n    Vnode.attrs['value'] = directive.value;\n    Vnode.elm.addEventListener('input', directive.event);\n}\n\n\n//处理class指令\nvar processClassDirective = function(Vnode, directive) {\n    var attrs = Vnode.attrs\n    var classList = '';\n\n    //属性中是否存在class\n    if (!isEmpty(attrs)) {\n        classList = attrs['class'] != null ? attrs['class'] : '';\n    }\n    //遍历class exp\n    for (var className in directive.exp) {\n        if (directive.exp[className]) {\n            classList += ' ' + className;\n        }\n    }\n    if (classList.length > 0) {\n        Vnode.attrs['class'] = classList;\n    }\n}\n\n\n//处理show指令\nvar processShowDirective = function(Vnode, directive) {\n    var style = Vnode.attrs['style'];\n    if (style && style.length > 0) {\n        var display = directive.exp ? 'display:show;' : 'display:none;';\n        style += styleSeparatorReg.test(style) ? display : ';' + display;\n    } else {\n        style = directive.exp ? 'display:show;' : 'display:none;'\n    }\n    Vnode.attrs['style'] = style;\n}\n\n\n\n\nexport {\n    setAttribute,\n    setEventListener,\n    processDirective,\n    processModelDirective,\n    processClassDirective,\n    processShowDirective\n}\n\n\n// WEBPACK FOOTER //\n// src/Vnode/patch/process.js","\n\nvar expReg = /\\{\\{((?:.|\\n)+?)\\}\\}/;\n\n\n// filter还没做\nexport var parseText = function(text){\n    var tokenExp = [];\n    var expMatch \n    var nextIndex,lastIndex = 0;\n    if( !expReg.test(text) ){\n        return false;\n    }\n\n    while( (expMatch = expReg.exec(text)) ){\n        //如果表达式之前有内容\n        if(expMatch.index > lastIndex){\n            tokenExp.push('\"'+text.slice(0,expMatch.index)+'\"')\n            text = text.substring(expMatch.index);\n        }\n        //中间表达式内容\n        lastIndex = expMatch.index;\n        text = text.substring(expMatch[0].length);\n        tokenExp.push('_s('+expMatch[1].trim()+')');\n        //判断中间是否还有字符\n        nextIndex = text.indexOf('{{');\n        if(nextIndex > 0){\n            tokenExp.push('\"'+text.slice(0,nextIndex)+'\"')\n            text = text.substring(nextIndex);\n        }\n        //表达式之后还有字符\n        if(lastIndex !== 0){\n            //如果后面还有表达式\n            if(expReg.test(text)){\n                 continue\n            }else{\n               tokenExp.push('\"'+text.slice(0,lastIndex)+'\"') \n            }\n        }\n    }\n    if(lastIndex<text.length){\n        tokenExp.push('\"'+text.slice(lastIndex,text.length)+'\"')\n    }\n\n    return tokenExp.join('+');\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/compiler/parse/text-parse.js","\n\nvar did = 0;\n\n\n//辅助绑定对象\nconst Dep = function(){\n    this.id = did++;\n    this.sub = [];\n}\n//全局对象\nDep.target = null\n//添加watcher\nDep.prototype.add = function(watcher){\n\tthis.sub.push(watcher);\n}\n//通知watcher更新\nDep.prototype.notify = function(){\n\tfor(var i=0; i<this.sub.length ;i++){\n\t\tthis.sub[i].update();\n\t}\n}\n\n\n\nexport var setDepTarget = function(target){\n\tDep.target = target;\n};\n\nexport var clearDepTarget = function(){\n\tDep.target = null;\n}\n\n\n\nexport default Dep;\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/dep.js","\nimport { isUndefined } from '../share/judge/util';\n\n//当前目前属性映射到scopeKey\nfunction setProxy(target,scopeKey,key){\n    var objDefineProperty = {\n        configurable: false,\n        enumerable: true,\n        set:function(value){\n            target[scopeKey][key] = value;\n        },\n        get:function(){\n            return target[scopeKey][key];\n        }\n    }\n    Object.defineProperty(target,key,objDefineProperty)\n}\n\n\n\n//设置代理\nexport var defineDataProxy = function(vue){\n    //当前目前属性映射到_data\n    for(var key in vue._data){\n        if(isUndefined(vue[key])){\n            setProxy(vue,'_data',key);\n        }\n    }\n}\n\n\n\n//设置事件代理\nexport var defineEventProxy = function(vue){\n    //当前目前属性映射到_method\n    for(var key in vue._method){\n        if(isUndefined(vue[key])){\n            setProxy(vue,'_method',key);\n        }\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/proxy.js","\n\n\nexport * from './error';\nexport * from './tool';\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/share/utiliy/index.js","import {\n    warnError\n} from './error';\n\n\n\n//设置映射\nexport var makeMap = function(key, valueString) {\n    var map = {};\n    var list = (typeof valueString === 'string') ? valueString.split(',') : valueString.toString().split(',');\n    if (Array.isArray(list) && list.length > 0) {\n        map[key] = list\n    } else {\n        warnError('set map error: valueString type error or value error')\n        return false;\n    }\n    return function(value) {\n        return map[key].indexOf(value) !== -1 ? true : false;\n    }\n}\n\n\n\n\n//构建转译字符串\nexport var toStringify = function(text) {\n    if (typeof text === 'string') {\n        return text;\n    }\n    return text.toString();\n}\n\n\n//方法中绑定当前作用域\nexport var bind = function(event) {\n    var self = this;\n    return function() {\n        event.apply(self, arguments)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// src/share/utiliy/tool.js","import {\n    toStringify,\n    warnError,\n    bind\n} from '../share/utiliy/index';\nimport {\n    initCompiler\n} from './render';\nimport {\n    initData\n} from './data';\nimport {\n    initMethod\n} from './method';\n\nimport Watcher from '../observer/watcher';\n\nimport {\n    createVNodeElement,\n    createVNodeText,\n    createListVNode,\n} from '../Vnode/index';\n\n\nvar uid = 0;\n\nconst VueMini = function(option) {\n    if (!option) {\n        warnError('Init error :option not undefined')\n        return this;\n    }\n    this.id = uid++;\n    this.self = this;\n    this._el = option.el\n    this._option = option;\n    this._rootParent = option.rootParent ? option.rootParent : '';\n\n    //生命周期 后面还需完善\n    if (option.updated && typeof option.updated === 'function') {\n        this.updated = option.updated\n    }\n\n    if (option.mounted && typeof option.mounted === 'function') {\n        this.mounted = option.mounted\n    }\n\n    //执行初始化\n    this.$init();\n\n}\n\n\n\n/**************  原型方法   ***************/\n//初始化\nVueMini.prototype.$init = function() {\n    //初始化编译\t\n    initCompiler(this);\n    //初始化data数据建立绑定\n    initData(this);\n    //初始化mothod方法\n    initMethod(this)\n\n    //开始挂载\n    this.$mount();\n\n    return this;\n}\n\n\n\n//挂载\nVueMini.prototype.$mount = function() {\n    if (!this._render) {\n        warnError('$mount error: VueMini._render  is not defined')\n    }\n    var $render = this._render;\n    this._watcher = new Watcher(this, $render);\n}\n\n\n\n/**********   render中使用  ***********/\nVueMini.prototype._s = toStringify;\nVueMini.prototype._c = createVNodeElement;\nVueMini.prototype._v = createVNodeText;\nVueMini.prototype._l = createListVNode;\nVueMini.prototype._e = bind\n\n\n\nexport default VueMini;\n\n\n// WEBPACK FOOTER //\n// src/instance/index.js","import {\n    cerateElementBindAddParent\n} from './patch/create.js'\nimport {\n    updateElement,\n    removeElement\n} from './patch/update.js'\n\n\n\n\n//将虚拟节点更新到真实DOM中\nexport var patch = function(oldNode, Vnode, isRoot) {\n    //是否是根节点 并且老节点是空节点\n    if (isRoot && oldNode.empty) {\n        //创建新元素 更新到DOM\n        cerateElementBindAddParent(Vnode, Vnode.parent);\n        //删除老节点 从DOM中删除对应真实节点\n        removeElement(oldNode)\n    } else if (oldNode && Vnode) {\n        //不是的话 那么更新对比节点\n        updateElement(oldNode, Vnode)\n    }\n    return Vnode;\n}\n\n\n// WEBPACK FOOTER //\n// src/Vnode/patch.js","import * as nodeOp from '../dom-operation';\nimport { isEmpty } from '../../share/judge/util';\nimport { isElement } from '../../share/judge/util'\nimport {\n    cerateElement,\n    cerateElementBindAddParent\n} from './create.js'\n\nimport {\n    setAttribute,\n    setEventListener,\n    processDirective,\n    processModelDirective,\n    processClassDirective,\n    processShowDirective\n} from './process';\n\n\n/**************************    删除部分         *****************************/\n\n//这里还不完整\nvar removeElement = function(Vnode) {\n    //如果是body 不能删除\n    if(isElement(Vnode.elm) && Vnode.elm.nodeName === 'BODY'){\n        return false;\n    }\n    //正常卸载\n    if (Vnode.empty) {\n        var parent = nodeOp.getParent(Vnode.elm);\n        nodeOp.removeChild(parent, Vnode.elm)\n    } else {\n        //这里还要卸载相应事件等等\n        //没有卸载相关事件,可能导致内存溢出\n        //暂未完成\n        var parent = nodeOp.getParent(Vnode.elm);\n        nodeOp.removeChild(parent, Vnode.elm)\n    }\n}\n\n\n\n/**************************    更新部分         *****************************/\n//这里还不完整\nvar updateElement = function(oldNode, Vnode) {\n    //如果老节点存在,新节点不存在\n    if (oldNode && !Vnode) {\n        removeElement(oldNode);\n        return false;\n    }\n    //如果新节点存在,老节点不存在\n    if (!oldNode && Vnode) {\n        var parentElm = Vnode.parent.elm;\n        cerateElementBindAddParent(Vnode, parentElm)\n        return false;\n    }\n    //如果节点类型出现不匹配\n    if (Vnode.VnodeType !== oldNode.VnodeType) {\n        //新老节点出现类型变化 则重新生产并且替换\n        Vnode = cerateElement(Vnode);\n        nodeOp.repalceNode(Vnode.parent.elm, Vnode.elm, oldNode.elm)\n        return false;\n    }\n\n    //更新组件\n    if (Vnode.VnodeType === 1) {\n        Vnode.elm = oldNode.elm;\n        updateDirective(oldNode, Vnode);\n        updateAttrs(oldNode, Vnode);\n        updateChildren(oldNode.children, Vnode.children);\n    } else if (Vnode.VnodeType === 2) {\n        Vnode.elm = oldNode.elm;\n        updateText(oldNode, Vnode)\n    }\n}\n\n\n\n//更新指令\nvar updateDirective = function(oldNode, Vnode) {\n    var oldDirective = oldNode.directives;\n    var nowDirective = Vnode.directives;\n    if (!nowDirective || nowDirective.length === 0) {\n        return false;\n    }\n    //遍历新指令依次做对比更新\n    for (var i = 0; i < nowDirective.length; i++) {\n        var now = nowDirective[i];\n        var old = getOldDirectiveValue(now.name)\n        //处理相应指令\n        switch (now.name) {\n            case 'model':\n                if (!old) {\n                    processModelDirective(Vnode, now);\n                } else if (old.value !== now.value) {\n                    //更新值\n                    Vnode.attrs['value'] = now.value;\n                }else{\n                    Vnode.attrs['value'] = old.value;\n                }\n                break;\n            case 'class':\n                //这里可能存在性能损耗\n                processClassDirective(Vnode, now)\n                break;\n            case 'show':\n                //这里可能存在性能损耗\n                processShowDirective(Vnode, now)\n                break;\n        }\n    }\n\n    //获取旧指令集合中指令名对应的指令\n    function getOldDirectiveValue(directiveName) {\n        if (!oldDirective || oldDirective.length === 0) {\n            return false;\n        }\n        for (var i = 0; i < oldDirective.length; i++) {\n            if (oldDirective[i].name === directiveName) {\n                return oldDirective[i];\n            }\n        }\n        return false\n    }\n}\n\n\n\n//更新属性\nvar updateAttrs = function(oldNode, Vnode) {\n    var refElm = Vnode.elm;\n    var oldAttrs = oldNode.attrs;\n    var nowAttrs = Vnode.attrs;\n    if (!oldAttrs && !nowAttrs) {\n        return false;\n    }\n    //如果是input 特殊更新\n    if(Vnode.tagName === 'input'){\n        return updateInput(oldNode,Vnode)\n    }\n    var nowKeys = (nowAttrs && !isEmpty(nowAttrs)) ? Object.keys(nowAttrs) : [];\n    //遍历新属性集合更新对应节点属性\n    for (var i = 0; i < nowKeys.length; i++) {\n        var key = nowKeys[i]\n            //如果老节点没有\n        if (!oldAttrs[key]) {\n            //checked 特殊处理\n            nodeOp.setAttribute(refElm, key, nowAttrs[key])\n            continue;\n        }\n        //如果老节点有 那么比较\n        if (oldAttrs[key] !== nowAttrs[key]) {\n            nodeOp.setAttribute(refElm, key, nowAttrs[key])\n            delete oldAttrs[key];\n        } else {\n            //相同则删除老节点的\n            delete oldAttrs[key];\n        }\n    }\n    //遍历旧属性集合 这里剩下的都是需要删除的\n    var oldKeys = (oldAttrs && !isEmpty(oldAttrs)) ? Object.keys(oldAttrs) : [];\n    for (var i = 0; i < oldKeys.length; i++) {\n        var key = oldKeys[i];\n        nodeOp.removeAttribute(refElm, key);\n        delete oldAttrs[key];\n    }\n}\n\n\n\n//更新文本内容\nvar updateText = function(oldNode, Vnode) {\n    if (oldNode.text !== Vnode.text) {\n        nodeOp.setText(Vnode.elm, Vnode.text);\n    }\n}\n\n\n\n//更新子节点\nvar updateChildren = function(oldChildren, children) {\n    //子节点递归更新\n    var len = children.length;\n    for (var i = 0; i < len; i++) {\n        var Vnode = children[i];\n        var oldVnode;\n\n        if (oldChildren && oldChildren[i]) {\n            oldVnode = oldChildren[i]\n        } else {\n            oldVnode = false;\n        }\n        updateElement(oldVnode, Vnode);\n    }\n\n    if (oldChildren) {\n        //删除余下的老节点\n        for (var i = len; i < oldChildren.length; i++) {\n            updateElement(oldChildren[i], false);\n        }\n    }\n}\n\n\n\n//input textare 等 value问题特殊更新\nvar updateInput = function(oldNode, Vnode){\n    var refElm = Vnode.elm;\n    var oldAttrs = oldNode.attrs;\n    var nowAttrs = Vnode.attrs;\n    if (!oldAttrs && !nowAttrs) {\n        return false;\n    }\n    var nowKeys = (nowAttrs && !isEmpty(nowAttrs)) ? Object.keys(nowAttrs) : [];\n    //遍历新属性集合更新对应节点属性\n    for (var i = 0; i < nowKeys.length; i++) {\n        var key = nowKeys[i]\n            //如果老节点没有\n        if (!oldAttrs[key]) {\n            switch (key) {\n                case 'checked':\n                   if (JSON.parse(nowAttrs[key])) {\n                        nodeOp.setAttribute(refElm, key, 'checked')\n                    }\n                    break;\n                case 'value':\n                    nodeOp.setElementValue(refElm,key,nowAttrs[key])\n                    break;\n                default:nodeOp.setAttribute(refElm, key, nowAttrs[key])\n            }\n            continue;\n        }\n        //如果老节点有 那么比较\n        if (oldAttrs[key] !== nowAttrs[key]) {\n            switch (key) {\n                case 'checked':\n                   if (JSON.parse(nowAttrs[key])) {\n                        nodeOp.setAttribute(refElm, key, 'checked')\n                    }else {\n                        nodeOp.removeAttribute(refElm, key)\n                    }\n                    break;\n                case 'value':\n                    nodeOp.setElementValue(refElm,key,nowAttrs[key])\n                    break;\n                default:\n                    nodeOp.setAttribute(refElm, key, nowAttrs[key])\n            }\n            delete oldAttrs[key];\n        } else {\n            //相同则删除老节点的\n            delete oldAttrs[key];\n        }\n    }\n    //遍历旧属性集合 这里剩下的都是需要删除的\n    var oldKeys = (oldAttrs && !isEmpty(oldAttrs)) ? Object.keys(oldAttrs) : [];\n    for (var i = 0; i < oldKeys.length; i++) {\n        var key = oldKeys[i];\n        nodeOp.removeAttribute(refElm, key);\n        delete oldAttrs[key];\n    }\n}\n\n\n\nexport {\n    removeElement,\n    //update\n    updateElement,\n    updateDirective,\n    updateAttrs,\n    updateInput,\n    updateText,\n    updateChildren\n}\n\n\n// WEBPACK FOOTER //\n// src/Vnode/patch/update.js","import {\n    parseText\n} from './parse/text-parse';\n\n\n//编译生成可执行code\nexport var generateCode = function(AST) {\n    var tag = AST.tagName;\n    var attrs = genreateAttr(AST.attrs);\n    var children = generateChildren(AST.children)\n    var EventCode = generateEvent(AST.event);\n    var directiveCode = generateDirective(AST.directive);\n\n    return 'with(this){return _c(\"' + tag + '\",' + attrs + ',' + children + ',' + EventCode + ',' + directiveCode + ',_rootParent)}'\n}\n\n\n\n//vm-for directive特殊生成\nfunction generateForCode(node) {\n    var tag = node.tagName;\n    var attrs = genreateAttr(node.attrs);\n    var children = generateChildren(node.children)\n    var EventCode = generateEvent(node.event);\n    var directiveCode = generateDirective(node.directive);\n    return '_l(' + node.forSource + ',function(' + node.forkey + ',$index){ return _c(\"' + tag + '\",' + attrs + ',' + children + ',' + EventCode + ',' + directiveCode + ')})'\n}\n\n\n\n//vm-if directive特殊生成\nfunction generateIFCode(node) {\n    var tag = node.tagName;\n    var type = node.type\n    var ifExp = node.ifExp;\n    switch (type) {\n        case 1:\n            var attrs = genreateAttr(node.attrs);\n            var children = generateChildren(node.children)\n            var EventCode = generateEvent(node.event);\n            var directiveCode = generateDirective(node.directive);\n            return '(' + ifExp + ')? _c(\"' + tag + '\",' + attrs + ',' + children + ',' + EventCode + ',' + directiveCode + '): _v(\"\")'\n        case 2:\n            return '(' + ifExp + ')? _v(_s(' + node.exp + ')) : _v(\"\")'\n        case 3:\n            return '(' + ifExp + ')? _v(\"' + node.text + '\") : _v(\"\")'\n    }\n    return '_v(\"\")'\n}\n\n\n\n//生成子节点Code函数\nfunction generateChildren(children) {\n    if (!Array.isArray(children) || children.length === 0) {\n        return '[]';\n    }\n    var CodeList = [];\n    for (var i = 0; i < children.length; i++) {\n        var node = children[i];\n        //如果是vm-for命令特殊处理\n        if (node.isFor) {\n            CodeList.push(generateForCode(node))\n            continue;\n        }\n        //如果是vm-if命令特殊处理\n        if (node.isIf) {\n            CodeList.push(generateIFCode(node))\n            continue;\n        }\n        //普通子节点处理\n        switch (node.type) {\n            case 1:\n                //解析生成事件\n                var EventCode = generateEvent(node.event);\n                //解析指令\n                var directiveCode = generateDirective(node.directive);\n                //递归绑定子节点\n                if (Array.isArray(node.children) || node.children.length > 0) {\n                    CodeList.push('_c(\"' + node.tagName + '\",' + genreateAttr(node.attrs) + ',' + generateChildren(node.children) + ',' + EventCode + ',' + directiveCode + ')');\n                } else {\n                    CodeList.push('_c(\"' + node.tagName + '\",' + genreateAttr(node.attrs) + ',[],' + EventCode + ',' + directiveCode + ')');\n                }\n                break;\n            case 2:\n                CodeList.push('_v(_s(' + node.exp + '))');\n                break;\n            case 3:\n                CodeList.push('_v(\"' + node.text + '\")');\n                break;\n        }\n    }\n    return '[' + CodeList.join(',') + ']'\n}\n\n\n\n//生成事件Code函数\nfunction generateEvent(events) {\n    if (!Array.isArray(events) || events.length === 0) {\n        return '[]';\n    }\n\n    var EventCodeList = [];\n\n    for (var i = 0; i < events.length; i++) {\n        var eve = events[i];\n        if (eve.params) {\n            EventCodeList.push('{name:\"' + eve.name + '\",exp:_e(' + eve.exp + '),params:[' + eve.params + ']}')\n        } else {\n            EventCodeList.push('{name:\"' + eve.name + '\",exp:_e(' + eve.exp + ')}')\n        }\n    }\n\n    return '[' + EventCodeList.join(',') + ']'\n}\n\n\n\n//生成指令Code函数\nfunction generateDirective(directives) {\n    if (!Array.isArray(directives) || directives.length === 0) {\n        return '[]';\n    }\n\n    var directiveCode = [];\n    for (var i = 0; i < directives.length; i++) {\n        var direc = directives[i];\n        if (direc.name === 'model') {\n            directiveCode.push('{name:\"' + direc.name + '\",exp:function(val){ ' + direc.exp + ' = val },value:' + direc.exp + '}')\n            continue;\n        }\n        if (direc.name === 'class') {\n            directiveCode.push('{name:\"' + direc.name + '\",exp:' + direc.exp + '}')\n            continue;\n        }\n        if (direc.name === 'show') {\n            directiveCode.push('{name:\"' + direc.name + '\",exp:' + direc.exp + '}')\n            continue;\n        }\n    }\n\n    return '[' + directiveCode.join(',') + ']'\n}\n\n\n\n//生成attributeCode函数\nfunction genreateAttr(attrs) {\n    var expReg = /\\{\\{((?:.|\\n)+?)\\}\\}/;\n    var attrsCode = '{';\n    if (!Array.isArray(attrs) || attrs.length === 0) {\n        return '{}';\n    }\n    for (var i = 0; i < attrs.length; i++) {\n        //判断表达式中间是否有解析式\n        var exp = parseText(attrs[i].value)\n        if (!exp) {\n            attrsCode += '\"' + attrs[i].name + '\":'\n            attrsCode += '\"' + attrs[i].value + '\"'\n        } else {\n            attrsCode += '\"' + attrs[i].name + '\":'\n            attrsCode += exp;\n        }\n        if ((i + 1) < attrs.length) {\n            attrsCode += ','\n        }\n    }\n    attrsCode += '}'\n    return attrsCode\n}\n\n\n// WEBPACK FOOTER //\n// src/compiler/generate.js","import {\n    parse\n} from './parse/index';\nimport {\n    generateCode\n} from './generate';\n\n\n\n\n\n//编译模板字符串为可执行函数\nexport var compileTemplateToFn = function(template, options, context) {\n    //开始解析模板 生成虚拟元素\n    var ast = parse(template.trim(), options);\n    // console.log('AST',ast)\n\n    var render = generateCode(ast, options.rootEl);\n    // console.log('render', render)\n    // debugger;\n\n    return new Function(render);\n}\n\n\n// WEBPACK FOOTER //\n// src/compiler/index.js","\nimport { warnError } from '../../share/utiliy/error';\n\n//捕获事件\nvar eventReg = /vm-on([a-zA-Z]+)/;\n//捕获事件是否穿参数\nvar eventParamsReg = /^([a-zA-Z,\"']+)\\(([$\\w,\"']+)\\)/\n//捕获指令\nvar directiveReg = /vm-([a-z]+)/;\n//捕获vnm-for内容\nvar forReg = /^\\s*([\\w]+)\\s*in\\s*([\\w]+)/;\n\n\n\n//设置attribute映射\nfunction setAttributeMap(attrs){\n    var attribute = {};\n    for(var i=0 ;i<attrs.length ;i++){\n        attribute[attrs[i].name] = attrs[i].value; \n    }\n    return attribute;\n}\n\n\n//提取attribute\nfunction getAttributeMap(attrMap,attrKey){\n    var keys = Object.keys(attrMap);\n    if(keys.indexOf(attrKey) !== -1){\n        var attrValue = attrMap[attrKey];\n        delete attrMap[attrKey];\n        return attrValue;\n    }\n}\n\n\n\n//编译节点属性\nexport function parseAttrs(astElm ,attrs){\n    var attrsMap = setAttributeMap(attrs)\n    var elm = astElm;\n    for(var i=0; i<attrs.length; i++){\n        var key = attrs[i].name;\n        //处理指令\n        processDirective(elm,key,attrsMap);\n        //处理事件\n        processEvent(elm,key,attrsMap)\n    }\n    //特殊处理vm-if\n    processIf(elm)\n    //特殊处理vm-for\n    processFor(elm)\n    //处理剩余的attr\n    processSurplus(elm,attrsMap)\n}\n\n\n\n\n//处理vm-xxx等指令\nfunction processDirective(elm,attrKey,attrMap){\n    if( !directiveReg.test(attrKey) || /vm-on/.test(attrKey) ){\n        return false;\n    }\n    var directive = {};\n    directive.name = attrKey.match(directiveReg)[1];\n    directive.exp = getAttributeMap(attrMap,attrKey);\n    elm.directive.push(directive);\n}\n\n\n\n//处理vm-if指令\nfunction processIf(elm){\n    if(!Array.isArray(elm.directive) || elm.directive.length === 0){\n        return false;\n    }\n    var directive;\n    for(var i=0 ; i<elm.directive.length ;i++){\n        if(elm.directive[i].name === 'if'){\n            directive = elm.directive[i];\n            break;\n        }\n    }\n    if(!directive){\n        return false;\n    }\n    elm.isIf = true;\n    elm.ifExp = directive.exp;\n    elm.directive.splice(i,1);\n}\n\n\n//处理vm-for指令\nfunction processFor(elm){\n    if(!Array.isArray(elm.directive) || elm.directive.length === 0){\n        return false;\n    }\n    var directive;\n    for(var i=0 ; i<elm.directive.length ;i++){\n        if(elm.directive[i].name === 'for'){\n            directive = elm.directive[i];\n            break;\n        }\n    }\n    if(!directive){\n        return false;\n    }\n    elm.isFor = true;\n    var forMatch = directive.exp.match(forReg);\n    if(forMatch && forMatch[1] && forMatch[2]){\n        elm.forkey = forMatch[1];\n        elm.forSource = forMatch[2];\n    }else{\n        warnError('compiler error: directive vm-for parse is error')\n        elm.isFor = false;\n        return false;\n    }\n}\n\n\n\n\n\n//处理vm-XXXX事件\n//未完成\nfunction processEvent(elm,attrKey,attrMap){\n    if( !eventReg.test(attrKey) ){\n        return false;\n    }\n    var event = {}\n    event.name = attrKey.match(eventReg)[1].toLowerCase();\n    event.exp = getAttributeMap(attrMap,attrKey);\n    \n    //如果存在包裹参数\n    if(eventParamsReg.test(event.exp)){\n        var exp = event.exp.match(eventParamsReg)[1]\n        var params = event.exp.match(eventParamsReg)[2];\n        //判断是否传入多个参数\n        if(params.indexOf(',') > -1){\n            params = params.split(',')\n        }\n        event.params = params;\n        event.exp = exp;\n    }\n    elm.event.push(event);\n}\n\n\n\n\n//处理剩余attr\nfunction processSurplus(elm,attrMap){\n    for(var key in attrMap){\n        var attr = {};\n        attr.name = key;\n        attr.value = getAttributeMap(attrMap,key)\n        elm.attrs.push(attr);\n    }\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/compiler/parse/attr-parse.js","\n\n\n//捕获attribute的正则\n// key = /^\\s*([^\\s\"'<>\\/=]+)/\n// assing = /?:\\s*((?:=))/\n// value = /\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+))/\nvar attributeReg = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*((?:=))\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\n\n\n//标签名\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:'+ ncname +'\\\\:)?'+ ncname +')';\n\n//开始标签开头\nvar startTagOpen = new RegExp('^<'+qnameCapture);\n//开始标签结束\nvar startTagClose = /^\\s*(\\/?)>/;\n//结束标签\nvar endTag = new RegExp('^<\\\\/'+qnameCapture+'[^>]*>');\n\n//doctype\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n//comment\nvar comment = /^<!--/;\n//conditional\nvar conditionalComment = /^<!\\[/\n\n//为了解决某些版本 编译转化的问题\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n}\n//不编译换行\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g\n//编译换行\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g\n\n\n//火狐正则bug\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g,function(m,g){\n\tIS_REGEX_CAPTURING_BROKEN = g === ''\n});\n\n\n\n//解析html\nexport var parseHTML = function(html, option){\n\tvar stack = [];\n\t//是否不可嵌套节点\n\tvar canBeleftOpenTag = option.canBeleftOpenTag;\n\t//是否自闭和节点\n\tvar isUnaryTag = option.isUnaryTag;\n\t//不可包裹节点\n\tvar isNonPhrasingTag = option.isNonPhrasingTag;\n\t//是否是IE\n\tvar isIE = option.isIE;\n\t//解析下标\n\tvar index = 0;\n\tvar last , lastTag;\n\t//解析开始\n\twhile(html){\n\t\tlast = html;\n\t\t//找到标签开始\n\t\tvar textEnd = html.indexOf('<');\n\t\t//开始标签\n\t\tif(textEnd === 0){\n\t\t\t//判断是否是注释\n\t\t\tif( comment.test(html) ){\n\t\t\t\tvar commentEnd = html.indexOf('-->');\n\t\t\t\tif(commentEnd >= 0){\n\t\t\t\t\tadvance(commentEnd + 3);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//判断条件标签\n\t\t\tif( conditionalComment.test(html) ){\n\t\t\t\tvar conditionalEnd = html.indexOf(']>');\n\t\t\t\tif( conditionalEnd >=0 ){\n\t\t\t\t\tadvance(conditionalEnd + 2);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//DOCTYPE\n\t\t\tvar doctypeMatch = html.match(doctype);\n\t\t\tif( doctypeMatch ){\n\t\t\t\tadvance( doctypeMatch[0].length );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//结束标签\n\t\t\tvar endTagMatch = html.match(endTag);\n\t\t\tif( endTagMatch ){\n\t\t\t\tvar curIndex = index;\n\t\t\t\tadvance( endTagMatch[0].length );\n\t\t\t\tparseEndTag(endTagMatch[1]);\n\t\t\t\tcontinue;\n\t\t\t}\t\t\t\t\t\t\n\t\t\t//开始标签\n\t\t\tvar startTagMatch = parseStartTag();\n\t\t\tif(startTagMatch){\n\t\t\t\thandleStartTag(startTagMatch);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t//文本内容\n\t\tvar text, rest , next;\n\t\tif(textEnd >= 0){\n\t\t\t//文本内容\n\t\t\trest = html.slice(textEnd);\n\t\t\t//推进到下阶段字符串\n\t\t\twhile(\n\t\t\t\t!endTag.test(rest)&&\n\t\t\t\t!startTagOpen.test(rest)&&\n\t\t\t\t!comment.test(rest)&&\n\t\t\t\t!conditionalComment.test(rest)\n\t\t\t){\n\t\t\t\tnext = rest.indexOf('<',1)\n\t\t\t\tif(next < 0) break;\n\t\t\t\ttextEnd += next;\n\t\t\t\trest = html.slice(textEnd);\n\t\t\t}\n\n\t\t\ttext = html.substring(0,textEnd);\n\t\t\tadvance(textEnd);\n\t\t}\n\n\t\tif(textEnd < 0){\n\t\t\ttext = html;\n\t\t\thtml = '';\n\t\t}\n\n\t\tif(option.chars && text){\n\t\t\toption.chars(text)\n\t\t}\n\t}\n\n\t//向前推进\n\tfunction advance(n){\n\t\tindex += n;\n\t\thtml = html.substring(n);\n\t}\n\n\n\t//解析开头标签\n\tfunction parseStartTag(){\n\t\tvar tagMatch = html.match(startTagOpen)\n\t\tvar end , attr ;\n\t\tif( tagMatch ){\n\t\t\tvar match = {\n\t\t\t\ttagName:tagMatch[1].toLowerCase(),\n\t\t\t\tattrs:[],\n\t\t\t\tstart:index,\n\t\t\t}\n\t\t\tadvance(tagMatch[0].length)\n\n\t\t\twhile( !(end = html.match(startTagClose)) && (attr = html.match(attributeReg)) ){\n\t\t\t\tif(attr){\n\t\t\t\t\tadvance(attr[0].length);\n\t\t\t\t\tmatch.attrs.push(attr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(end){\n\t\t\t\tmatch.unarySlash = end[1];\n\t\t\t\tmatch.end = index;\n\t\t\t\tadvance(end[0].length)\n\t\t\t}\n\t\t\treturn match;\n\t\t}\n\t}\n\t\n\n\t//解析结束标签\n\tfunction parseEndTag(tagName){\n\t\tvar tagName = tagName.toLowerCase();\n\t\tvar index = -1;\n\t\tfor(var i=0; i<stack.length ;i++){\n\t\t\tif(tagName = stack[i].tagName){\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(index >= 0){\n\t\t\t//结束标签\n\t\t\tif(option.end){\n\t\t\t\toption.end(stack[i].tagName);\n\t\t\t}\n\t\t\t//解析stack弹出\n\t\t\tlastTag = stack.pop();\n\t\t}else{\n\t\t\tthrow('标签解析出错 '+tagName+'未找到结束标签')\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t//处理标签内容\n\tfunction handleStartTag(match){\n\t\tvar tagName = match.tagName;\n\t\tvar unarySlash = match.unarySlash;\n\t\t//P标签并且当前标签不可包裹\n\t\tif( lastTag === 'p' && isNonPhrasingTag(tagName) ){\n\t\t\tparseEndTag(lastTag);\n\t\t}\n\t\t//不可嵌套标签\n\t\tif( lastTag === tagName && canBeleftOpenTag(tagName) ){\n\t\t\tparseEndTag(tagName);\n\t\t}\n\n\t\tvar isUnary = isUnaryTag(tagName) || !!unarySlash;\n\n\t\tvar attrs = [];\n\t\tfor(var i=0 ;i<match.attrs.length ;i++){\n\t\t\tif( IS_REGEX_CAPTURING_BROKEN && match.attrs[i] ){\n\t\t\t\tif(!match.attrs[i][3]){ delete match.attrs[i][3] }\n\t\t\t\tif(!match.attrs[i][4]){ delete match.attrs[i][4] }\n\t\t\t\tif(!match.attrs[i][5]){ delete match.attrs[i][5] }\n\t\t\t}\n\t\t\tvar value = match.attrs[i][3] || match.attrs[i][4] || match.attrs[i][5] || ' '\n\t\t\tvar re = encodedAttr;\n\t\t\tattrs.push({\n\t\t\t\tname: match.attrs[i][1],\n\t\t\t\tvalue: value.replace(re, function(match){ return decodingMap[match] }),\n\t\t\t})\n\t\t}\n\t\tif(option.start){\n\t\t\tstack.push(match);\n\t\t\tlastTag  = tagName\n\t\t\toption.start(tagName,attrs,isUnary);\n\t\t}\n\t}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/compiler/parse/html-parse.js","\nimport { isNonPhrasingTag ,canBeleftOpenTag ,isUnaryTag } from '../../share/judge/element';\nimport { warnError } from '../../share/utiliy/error';\nimport { parseHTML } from './html-parse';\nimport { parseText } from './text-parse';\nimport { parseAttrs }  from './attr-parse';\n\n\n\n\n\nexport  var parse = function(template ,options){\n\tvar stack = [];\n\tvar root;\n\tvar currentParent ;\t\n\n\t\n\t//开始解析\n\tparseHTML(template,{\n\t\twarnError : options.warnError,\n\t\tisNonPhrasingTag: isNonPhrasingTag,\n\t\tcanBeleftOpenTag: canBeleftOpenTag,\n\t\tisUnaryTag: isUnaryTag,\n\t\tisIE: false,\n\t\t// 处理开始标签\n\t\t// 处理attribute部分还没做\n\t\tstart: function(tag,attrs,unary){\n\t\t\t//组件\n\t\t\tvar element = {\n\t\t\t\ttype: 1,\n\t\t\t\ttagName:tag,\n\t\t\t\t// isFor: false,\n\t\t\t\t// forkey: null,     vm-for专属数据\n\t\t\t\t// forSource: null\n\t\t\t\t// isIf: false,      vm-if标记\n\t\t\t\t// ifExp: null       vm-if表达式\n\t\t\t\tattrs:[],\n\t\t\t\tevent:[],\n\t\t\t\tdirective:[],\n\t\t\t\tchildren: [],\n\t\t\t}\n\t\t\t\n\t\t\t//编译处理提取到的attribute\n\t\t\tparseAttrs(element,attrs)\n\t\t\t//如果根节点不存在\n\t\t\tif(!root){\n\t\t\t\tif(element.isFor){\n\t\t\t\t\treturn warnError('compiler error: rootElement  can`t  is vm-for directive')\n\t\t\t\t}\n\t\t\t\troot = element;\n\t\t\t}\n\n\t\t\t//父节点存在将自己加入父节点中\n\t\t\tif(currentParent){\n\t\t\t\tcurrentParent.children.push(element);\n\t\t\t\telement.parent = currentParent;\n\t\t\t}\n\t\t\t//不是自闭合组件\n\t\t\tif(!unary){\n\t\t\t\t//赋值自己当前父节点\n\t\t\t\tcurrentParent = element\n\t\t\t\t//加入堆栈\n\t\t\t\tstack.push(element);\n\t\t\t}\n\t\t},\n\t\t//处理结束标签\n\t\tend: function(tagName){\n\t\t\tvar el = stack.pop();\n\t\t\tvar lastNode = el.children[el.children.length -1 ];\n\t\t\t//移除最后一个空节点\n\t\t\tif(lastNode && lastNode.type === 3 && lastNode.text === ''){\n\t\t\t\tel.children.pop();\n\t\t\t}\n\t\t\tcurrentParent = stack[stack.length -1];\n\t\t},\n\t\t//处理文本\n\t\tchars: function(text){\n\t\t\tvar expression;\n\t\t\tvar text = text.trim();\n\t\t\tif( text !== ' ' && (expression = parseText(text)) ){\n\t\t\t\tcurrentParent.children.push({\n\t\t\t\t\ttype:2,\n\t\t\t\t\texp:expression,\n\t\t\t\t\ttext: null\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tcurrentParent.children.push({\n\t\t\t\t\ttype:3,\n\t\t\t\t\texp:null,\n\t\t\t\t\ttext: text\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t});\n\n\treturn root;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/compiler/parse/index.js","\n\nimport { defineDataProxy } from '../observer/proxy';\nimport { defineDataToObserver } from '../observer/index';\n\n\n\n\n\nexport var initData = function(vue){\n    vue._data = vue._option.data;\n    //绑定数据代理,将data数据赋值给自己\n\n    defineDataProxy(vue);\n    //建立绑定拦截\n    defineDataToObserver(vue._data);\n}\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/instance/data.js","\n\nimport { defineEventProxy } from '../observer/proxy';\n\n\n\n\n\nexport var initMethod = function(vue){\n\tvue._method = vue._option.method? vue._option.method : false ;\n\tif(vue._method){\n\t    //绑定数据代理,将method数据赋值给自己\n    \tdefineEventProxy(vue)\n\t}\n}\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/instance/method.js","\nimport { warnError } from '../share/utiliy/error';\nimport { isElement } from '../share/judge/util'\nimport { compileTemplateToFn } from '../compiler/index';\n\n\n\n//查找元素 不存在则返回\nfunction queryDom(el){\n\tif(typeof el === 'string'){\n\t\tvar dom = document.querySelector(el);\n\t\treturn dom;\n\t}else if(el.nodeType && el.nodeType === 1){\n\t\treturn el;\n\t}\n}\n\n\n\n//获取标签全部内容\nfunction getOuterHTML (el){\n\tif(el.outerHTML){\n\t\treturn el.outerHTML;\n\t}else{\n\t\tvar container = document.createElement('div');\n\t\tcontainer.appendChild(el.cloneNode(true));\n\t\treturn container.innerHtml\n\t}\n}\n\n\n\n\n//初始化编译\nexport var initCompiler = function(vue){\n\tvar template;\n\tvar option = vue._option\n\tvar el = option.el;\n\tel = queryDom(el);\n\tif(!el || !isElement(el)){\n\t\twarnError('Compiler Error: el not is Dom NodeType or not query element')\n\t\treturn false;\n\t}\n\tif(!vue._rootParent && el.nodeName !== 'BODY'){\n\t\tvue._rootParent = el.parentNode\n\t}else{\n\t\tvue._rootParent = el\n\t}\n\ttemplate = option.template || getOuterHTML(el);\n\t//编译元素\n\tconst render = compileTemplateToFn(template,{\n\t\tdelimiters: option.delimiters,\n\t\twarnError: warnError\n\t},vue);\t\n\tvue._render = render;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/instance/render.js","\n\nimport Dep from './dep';\nimport { isObject } from '../share/judge/util';\n\n\n\nexport var defineDataToObserver = function(data){\n\n    var keys = Object.keys(data);\n    var dep = new Dep();\n\n    for(var i=0;i<keys.length ;i++){\n        var key = keys[i]\n        if( isObject(data[key]) || Array.isArray(data[key]) ){\n            //绑定这个数组或者对象\n            defineObserver(data,key,data[key]);\n            //递归绑定其中子元素\n            defineDataToObserver(data[key])\n        }else{\n            defineObserver(data,key,data[key])\n        }\n    }\n\n    //绑定观察者\n    function defineObserver(target,key,value){\n        Object.defineProperty(target,key,{\n            configurable: false,\n            enumerable: true,\n            set:function(newVal){\n                if(value === newVal){\n                    return \n                }\n                value = newVal;\n                dep.notify();\n            },\n            get:function(){\n                if(Dep.target){\n                    Dep.target.add(dep)\n                };\n                return value;\n            }\n        })\n    }\n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/observer/index.js","import {\n    warnError\n} from '../share/utiliy/index';\nimport {\n    isElement\n} from '../share/judge/util'\nimport {\n    setDepTarget,\n    clearDepTarget\n} from './dep';\nimport {\n    createEmptyVnode\n} from '../Vnode/index';\nimport {\n    patch\n} from '../Vnode/patch';\nimport {\n    queryNode\n} from '../Vnode/dom-operation';\n\n\n\nconst Watcher = function(vue, render) {\n    this._vue = vue;\n    this.depId = [];\n    this._render = render;\n    this.Vnode = null;\n    //首次挂载\n    this.render(true /*isRoot*/ );\n}\n\n//添加绑定\nWatcher.prototype.add = function(dep) {\n    //如果没有重复的dep则建立绑定\n    if (this.depId.indexOf(dep.id) === -1) {\n        this.depId.push(dep.id);\n        dep.add(this);\n    }\n}\n\n\n//更新\nWatcher.prototype.update = function() {\n    var self = this;\n    setTimeout(function() {\n        self.render.call(self, false)\n            //如果有更新回调事件,那么调用\n        if (self._vue.updated) {\n            self._vue.updated();\n        }\n    }, 0);\n}\n\n\nWatcher.prototype.render = function(isRoot) {\n    var el = isElement(this._vue._el) ? this._vue._el : (this._vue._el = queryNode(this._vue._el));\n    var Vnode;\n    var oldVnode;\n    if (!el) {\n        warnError('mount error: is new VueMini params el is no query dom');\n        return false;\n    }\n    //生成\n    try {\n        setDepTarget(this);\n        // var start  = new Date().getTime();\n        Vnode = this._render.call(this._vue);\n        clearDepTarget();\n    } catch (e) {\n        warnError('mount error: is VueMini render error, detail message a ' + e);\n        clearDepTarget();\n    }\n    //挂载\n    try {\n        if (this.Vnode) {\n            oldVnode = this.Vnode;\n        } else {\n            oldVnode = createEmptyVnode();\n            oldVnode.elm = el;\n            //初次挂载事件\n            if (this._vue.mounted) {\n                var self = this;\n                setTimeout(function() {\n                    self._vue.mounted.call(self._vue)\n                });\n            }\n        }\n        //将虚拟节点 更新到真实dom上\n        this.Vnode = patch(oldVnode, Vnode, isRoot /*isRoot*/ );\n        // var end = new Date().getTime();\n        // console.log( end-start )\n    } catch (e) {\n        warnError('mount error: is VueMini mount error, detail message a ' + e);\n    }\n}\n\n\n\nexport default Watcher;\n\n\n// WEBPACK FOOTER //\n// src/observer/watcher.js","\nimport { makeMap }from './../utiliy/tool';\n\n\n//不能被分局的标签\nexport var isNonPhrasingTag = makeMap('NonPhrasing',\n\t'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,'+\n\t'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,'+\n\t'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,'+\n\t'title,tr,track'\n)\n\n\n//不可嵌套标签\nexport var canBeleftOpenTag = makeMap('beleftOpenTag',\n\t'web,spinner,switch,video,textarea,canvas,'+\n\t'indicator,marquee,countdown'\n);\n\n\n//自闭和标签\nexport var isUnaryTag = makeMap('unaryTag',\n\t'embed,img,image,input,link,meta,br'\n);\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/share/judge/element.js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvCA;AAzBA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;AChFA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;;;;;;ACrHA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;ACnDA;AACA;AADA;AACA;AAAA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;;;AACA;AACA;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AC3FA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAocA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChRA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1KA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACeA;AACA;AArdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA1EA;AACA;AA4EA;AACA;;;;;;;;;;;;;;AC9FA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACdA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;;;ACrDA;AACA;;;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;ACjGA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAKA;AACA;;;;;;;;;;;A","sourceRoot":""}